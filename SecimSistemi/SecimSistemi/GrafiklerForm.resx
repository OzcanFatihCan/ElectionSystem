<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>